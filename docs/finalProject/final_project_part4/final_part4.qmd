
---
title: "DATA304 - Final Project Part 4"
format: html
editor: visual
author: "David Kim"
---
# Part 4 - Masterpiece & Keep Learning
```{python}
#necessary imports
import pandas as pd
import altair as alt
```

#### data
```{python}
OECD_birth_rate_url = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRsLwJcXI7x7pbSMWdfI4yp8GYMhK74sHQJMO6sqAyCC2deMZBGDaqf9nyZ7AlXFDQvWi43f6_pxEig/pub?output=csv'

# the dataset was downloaded from the stat.OECD and transferred to google sheet to be published online
OECD_birth_rate = pd.read_csv(OECD_birth_rate_url)
print(OECD_birth_rate.head())

# data wrangling
OECD_birth_rate_long = pd.melt(OECD_birth_rate, id_vars=['country'], var_name = "year" , value_name = "birthrate")
print(OECD_birth_rate_long.head())

```

```{python}

#base graphic
OECD_birth_rate_graphic = alt.Chart(OECD_birth_rate_long, height = 350).mark_line().properties(
  title = "South Korea's Birth Rate is the Lowest Among OECD Countries.",
  width = 500
)


line= OECD_birth_rate_graphic.encode (
  x = alt.X('year:T', title = ''),
  y = alt.Y('birthrate:Q', title = 'Birth Rate(per woman)'),
  color = alt.Color("country:N", legend=None),
  opacity=alt.condition(
    (alt.datum.country == 'Korea') | (alt.datum.country == 'OECD - Average'),
    alt.value(1),
    alt.value(0.3)),
strokeWidth=alt.condition(
        (alt.datum.country == 'Korea') | (alt.datum.country == 'OECD - Average'),
        alt.value(2),
        alt.value(1)
    ))

label = OECD_birth_rate_graphic.mark_text(align='left', dx=4). encode(
    x=alt.X('max(year):T', title = ""),
    y=alt.Y('birthrate:Q').aggregate(argmax='year'),
    text=alt.condition(
        (alt.datum.country == 'Korea')| (alt.datum.country == 'OECD - Average') ,
        'country',
        alt.value('')
    )
)

# Add text indicating the minimum birth rate
min_birth_rate_text = alt.Chart(pd.DataFrame({'y': [2.1]})).mark_text(
    text="Replacement level fertility requirment = 2.1 ",
    align='right',
    dx= +463 ,  # Adjust text position
    dy= 0   # Adjust text position
).encode(
    y=alt.Y('y:Q')
)

min_birth_rate_line = alt.Chart(pd.DataFrame({'y': [2.1]}), ).mark_rule(color='red').encode(
    y='y:Q'
)
combined_chart = alt.layer(line, label, min_birth_rate_text, min_birth_rate_line).configure_axisX(grid=False)
combined_chart
```

#### Palette Usage for Part 4

an encoding channel other than x or y : color, opacity, text, strokeWidth

concatenation

non-default configuration of a channel’s scale or guide : condition , align

#### Choices Made for Part 4 Graphics:

Title: The title "South Korea's Birth Rate is the Lowest Among OECD Countries" clearly conveys the main message of the graphic rather than just telling what the data represents.

Color and Opacity: Different colors are used for each country to distinguish between them. South Korea and the OECD average are highlighted with higher opacity (opacity of 1) compared to other countries (opacity of 0.3). This draws attention to the main focus of the graphic while providing context with the OECD average.

Stroke Width: South Korea and the OECD average lines are presented with thicker stroke widths (2) compared to other countries (1), making them more prominent and easier to distinguish, which aligns with the story of the Graphic.

Text and Line Annotation: Text annotation is used to provide additional information about the replacement level fertility requirement (2.1). This annotation helps viewers understand the significance of the y-value at 2.1 and its implications. A horizontal red line is added at y = 2.1 to visually highlight the replacement level fertility requirement.

The y axis title is omitted as it doesn't add anything to the graphic and is obvious that it is a year time series .

I could have highlighted other important OECD countries such as the United States but I decided not to as the main goal of the graphic is to show that South Korea's birth rate has been declining at rapid rate and currently has the lowest birth rate, not to compare to certain countries; the average OECD birth rate does the job of helping conveying this story.

Tooltip or any other interactive tools could have been easily added to the graphic but I decided not to because I wanted to make my graphic reusable for any type of platform/media that may not provide interactive tools.



Mention alternatives to your graphic that you considered but did not opt to submit:

I considered adding another line to illustrate additional factors contributing to the decline of Korea's birth rate. However, I decided against it because incorporating such data, like house prices, would complicate the y-axis scale and potentially alter the narrative without conducting a thorough study or establishing correlations. While the idea seemed intriguing, I refrained from doing so to avoid confusing the reader and potentially providing misleading information.

### Keep Learning

#### a - new learned Altair feature

Using condition in text mark :    

text=alt.condition(
        (alt.datum.country == 'Korea')| (alt.datum.country == 'OECD - Average') ,
        'country',
        alt.value('')
    )
    
Removing x axis grid using .configure_axisX(grid=False)

Adjusting x and y position for text mark using dx and dy.

#### b
[20.2](https://clauswilke.com/dataviz/redundant-coding.html)
"Whenever possible, design your figures so they don’t need a legend."

Eliminating legends, when necessary, makes it immediately clear what each graphical element represents, even without an explicit legend. This strategy, known as direct labeling, involves placing text labels or visual elements strategically throughout the figure to guide the viewer.

Following this advice, instead of including a color legend for the lines as initially done(which made the graphic messy), I removed the legend in part 4 graphic and added tick text next to the last value of the highlighted line to lessen the burden on the reader, reducing the need to locate and match the country.

Grid lines that run perpendicular to the key variable of interest tend to be the most useful.

[23.2](https://clauswilke.com/dataviz/balance-data-context.html)
"Grid lines that run perpendicular to the key variable of interest tend to be the most useful."

Using this advice, I removed the x-grid in the Part 4 graphic since it wasn't enhancing the visualization and because the y-value is the key variable of interest.

#### Reference

Wilke, C. O. 2019. Fundamentals of Data Visualization: A Primer on Making Informative and Compelling Figures. O’Reilly Media. [https://clauswilke.com/dataviz/](https://clauswilke.com/dataviz/).

